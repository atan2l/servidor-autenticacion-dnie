server {
    listen       80 ssl;
    listen  [::]:80 ssl;
    server_name  localhost;

    ssl_certificate /root/certs/localhost.crt;
    ssl_certificate_key /root/certs/localhost.key;

    # dnie-bundle.pem is the result of running the following command:
    # $ cat AC00{4,5,6}.pem ACRaiz2.pem > dnie-bundle.pem
    # Obviously, this requires converting the current .crt files from DER to PEM format
    ssl_client_certificate /root/pem-certs/dnie-bundle.pem;
    ssl_verify_client on;

    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256";
    ssl_prefer_server_ciphers on;

    ssl_conf_command SignatureAlgorithms RSA+SHA512:RSA+SHA384:RSA+SHA256:RSA+SHA1;

    ssl_protocols TLSv1.2;

    #access_log  /var/log/nginx/host.access.log  main;
    access_log /var/log/nginx/client_cert.log ssl_client_info;
    error_log /var/log/nginx/error.log debug;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

